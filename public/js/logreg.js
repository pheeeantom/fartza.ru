/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js-react/logreg.js":
/*!***********************************!*\
  !*** ./public/js-react/logreg.js ***!
  \***********************************/
/***/ (() => {

eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FormBar = function (_React$Component) {\n\t_inherits(FormBar, _React$Component);\n\n\tfunction FormBar(props) {\n\t\t_classCallCheck(this, FormBar);\n\n\t\tvar _this = _possibleConstructorReturn(this, (FormBar.__proto__ || Object.getPrototypeOf(FormBar)).call(this, props));\n\n\t\t_initialiseProps.call(_this);\n\n\t\tvar queryParams = new URLSearchParams(window.location.search);\n\t\tvar num = queryParams.get(\"num\");\n\t\tif (num == 0 || num == undefined) {\n\t\t\tactive = [true, false];\n\t\t} else if (num == 1) {\n\t\t\tactive = [false, true];\n\t\t}\n\t\t_this.state = { isActive: active, error: null, isLoaded: false, image: null };\n\t\t_this.check = _this.check.bind(_this);\n\t\treturn _this;\n\t}\n\n\t_createClass(FormBar, [{\n\t\tkey: \"componentDidMount\",\n\t\tvalue: function componentDidMount() {\n\t\t\tvar _this2 = this;\n\n\t\t\tfetch(\"/getCaptcha\").then(function (res) {\n\t\t\t\treturn res.json();\n\t\t\t}).then(function (result) {\n\t\t\t\t_this2.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\timage: result.image\n\t\t\t\t});\n\t\t\t},\n\t\t\t// Note: it's important to handle errors here\n\t\t\t// instead of a catch() block so that we don't swallow\n\t\t\t// exceptions from actual bugs in components.\n\t\t\tfunction (error) {\n\t\t\t\t_this2.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\terror: error\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"btn shadow-none\";\n\t\t\tvar error = this.state.error;\n\t\t\tvar isLoaded = this.state.isLoaded;\n\t\t\tvar image = this.state.image;\n\t\t\tif (error) {\n\t\t\t\treturn React.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"Error: \",\n\t\t\t\t\terror.message\n\t\t\t\t);\n\t\t\t} else if (!isLoaded) {\n\t\t\t\treturn React.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"Loading...\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn React.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t{ className: \"text-center\" },\n\t\t\t\t\t\tReact.createElement(\"input\", { type: \"checkbox\", className: \"btn-check\", id: \"btn-check-login\", onClick: this.check.bind(this, 0) }),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t{ className: this.state.isActive[0] ? classLink + \" checked\" : classLink, htmlFor: \"btn-check-login\" },\n\t\t\t\t\t\t\t\"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"pre\",\n\t\t\t\t\t\t\t{ className: \"d-inline\" },\n\t\t\t\t\t\t\t\" | \"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\"input\", { type: \"checkbox\", className: \"btn-check\", id: \"btn-check-registration\", onClick: this.check.bind(this, 1) }),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t{ className: this.state.isActive[1] ? classLink + \" checked\" : classLink, htmlFor: \"btn-check-registration\" },\n\t\t\t\t\t\t\t\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(Login, { isActive: this.state.isActive[0], base64Captcha: image }),\n\t\t\t\t\tReact.createElement(Registration, { isActive: this.state.isActive[1], base64Captcha: image })\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn FormBar;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n\tvar _this15 = this;\n\n\tthis.check = function (num) {\n\t\tif (num == 0) {\n\t\t\tactive = [true, false];\n\t\t} else if (num == 1) {\n\t\t\tactive = [false, true];\n\t\t}\n\t\t_this15.setState({ isActive: active });\n\t};\n};\n\nvar Login = function (_React$Component2) {\n\t_inherits(Login, _React$Component2);\n\n\tfunction Login(props) {\n\t\t_classCallCheck(this, Login);\n\n\t\tvar _this3 = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));\n\n\t\t_this3.state = { first: true, disabled: true };\n\t\t_this3.showTips = _this3.showTips.bind(_this3);\n\t\t_this3.manipulteSubmit = _this3.manipulteSubmit.bind(_this3);\n\t\t_this3.email = React.createRef();\n\t\t_this3.password = React.createRef();\n\t\t_this3.captcha = React.createRef();\n\t\treturn _this3;\n\t}\n\n\t_createClass(Login, [{\n\t\tkey: \"showTips\",\n\t\tvalue: function showTips() {\n\t\t\tif (this.state.first) {\n\t\t\t\tthis.setState({ first: false });\n\t\t\t\tthis.email.current.showTip();\n\t\t\t\tthis.password.current.showTip();\n\t\t\t\tthis.captcha.current.showTip();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"manipulteSubmit\",\n\t\tvalue: function manipulteSubmit() {\n\t\t\tif (this.email.current.state.isPassed && this.password.current.state.isPassed && this.captcha.current.state.isPassed) {\n\t\t\t\tthis.setState({ disabled: false });\n\t\t\t} else {\n\t\t\t\tthis.setState({ disabled: true });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar visible = void 0;\n\t\t\tif (!this.props.isActive) {\n\t\t\t\tvisible = \"d-none\";\n\t\t\t} else {\n\t\t\t\tvisible = null;\n\t\t\t}\n\t\t\tvar queryParams = new URLSearchParams(window.location.search);\n\t\t\tvar isInvalid = queryParams.get(\"invalid\");\n\t\t\tvar isCaptchaInvalid = queryParams.get(\"captcha\");\n\t\t\tvar classSmall = \"mes text-center pt-3 pb-3 mt-3 mb-4\";\n\t\t\tif (!isInvalid) {\n\t\t\t\tclassSmall += \" d-none\";\n\t\t\t}\n\t\t\tvar classSmallCaptcha = \"mes text-center pt-3 pb-3 mt-3 mb-4\";\n\t\t\tif (!isCaptchaInvalid) {\n\t\t\t\tclassSmallCaptcha += \" d-none\";\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"form\",\n\t\t\t\t{ className: visible + \" log pb-4\", action: \"login\", method: \"post\", autoComplete: \"off\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: classSmall },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"small\",\n\t\t\t\t\t\t{ className: \"form-text text-danger\" },\n\t\t\t\t\t\t\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u043B\\u0438\\u0431\\u043E \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: classSmallCaptcha },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"small\",\n\t\t\t\t\t\t{ className: \"form-text text-danger\" },\n\t\t\t\t\t\t\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u0430\\u044F \\u043A\\u0430\\u043F\\u0447\\u0430\"\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(Email, { ref: this.email, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, emailId: \"email-log\" }),\n\t\t\t\tReact.createElement(Password, { ref: this.password, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, passId: \"pass-log\" }),\n\t\t\t\tReact.createElement(Captcha, { ref: this.captcha, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, base64Captcha: this.props.base64Captcha }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: \"text-center\" },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t{ type: \"submit\", className: \"btn\", disabled: this.state.disabled },\n\t\t\t\t\t\t\"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Login;\n}(React.Component);\n\nvar Registration = function (_React$Component3) {\n\t_inherits(Registration, _React$Component3);\n\n\tfunction Registration(props) {\n\t\t_classCallCheck(this, Registration);\n\n\t\tvar _this4 = _possibleConstructorReturn(this, (Registration.__proto__ || Object.getPrototypeOf(Registration)).call(this, props));\n\n\t\t_this4.state = { first: true, disabled: true };\n\t\t_this4.showTips = _this4.showTips.bind(_this4);\n\t\t_this4.manipulteSubmit = _this4.manipulteSubmit.bind(_this4);\n\t\t_this4.checkPassIdentity = _this4.checkPassIdentity.bind(_this4);\n\t\t_this4.nickname = React.createRef();\n\t\t_this4.email = React.createRef();\n\t\t_this4.password = React.createRef();\n\t\t_this4.password2 = React.createRef();\n\t\t_this4.captcha = React.createRef();\n\t\treturn _this4;\n\t}\n\n\t_createClass(Registration, [{\n\t\tkey: \"showTips\",\n\t\tvalue: function showTips() {\n\t\t\tif (this.state.first) {\n\t\t\t\tthis.setState({ first: false });\n\t\t\t\tthis.nickname.current.showTip();\n\t\t\t\tthis.email.current.showTip();\n\t\t\t\tthis.password.current.showTip();\n\t\t\t\t//this.password2.current.showTip();\n\t\t\t\tthis.captcha.current.showTip();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"manipulteSubmit\",\n\t\tvalue: function manipulteSubmit() {\n\t\t\tif (this.nickname.current.state.isPassed && this.email.current.state.isPassed && this.password.current.state.isPassed && this.password2.current.state.isPassed && this.captcha.current.state.isPassed) {\n\t\t\t\tthis.setState({ disabled: false });\n\t\t\t} else {\n\t\t\t\tthis.setState({ disabled: true });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"checkPassIdentity\",\n\t\tvalue: function checkPassIdentity() {\n\t\t\tthis.password2.current.checkPassIdentity();\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar visible = void 0;\n\t\t\tif (!this.props.isActive) {\n\t\t\t\tvisible = \"d-none\";\n\t\t\t} else {\n\t\t\t\tvisible = null;\n\t\t\t}\n\t\t\tvar queryParams = new URLSearchParams(window.location.search);\n\t\t\tvar isNicknameBusy = queryParams.get(\"nicknameBusy\");\n\t\t\tvar isEmailBusy = queryParams.get(\"emailBusy\");\n\t\t\tvar isCaptchaInvalid = queryParams.get(\"captcha\");\n\t\t\tvar classEmail = classNickname = \"form-text text-danger\";\n\t\t\tvar classSmall = \"mes text-center pt-3 pb-3 mt-3 mb-4\";\n\t\t\tvar classSmallCaptcha = \"mes text-center pt-3 pb-3 mt-3 mb-4\";\n\t\t\tif (!isNicknameBusy) {\n\t\t\t\tclassNickname += \" d-none\";\n\t\t\t}\n\t\t\tif (!isEmailBusy) {\n\t\t\t\tclassEmail += \" d-none\";\n\t\t\t}\n\t\t\tif (!isNicknameBusy && !isEmailBusy) {\n\t\t\t\tclassSmall += \" d-none\";\n\t\t\t}\n\t\t\tif (!isCaptchaInvalid) {\n\t\t\t\tclassSmallCaptcha += \" d-none\";\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"form\",\n\t\t\t\t{ className: visible + \" reg pb-4\", action: \"registrate\", method: \"post\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: classSmall },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"small\",\n\t\t\t\t\t\t{ className: classNickname },\n\t\t\t\t\t\t\"\\u041D\\u0438\\u043A \",\n\t\t\t\t\t\tisNicknameBusy,\n\t\t\t\t\t\t\" - \\u0437\\u0430\\u043D\\u044F\\u0442\"\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"small\",\n\t\t\t\t\t\t{ className: classEmail },\n\t\t\t\t\t\t\"\\u0415\\u043C\\u0435\\u0439\\u043B \",\n\t\t\t\t\t\tisEmailBusy,\n\t\t\t\t\t\t\" - \\u0437\\u0430\\u043D\\u044F\\u0442\"\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: classSmallCaptcha },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"small\",\n\t\t\t\t\t\t{ className: \"form-text text-danger\" },\n\t\t\t\t\t\t\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u0430\\u044F \\u043A\\u0430\\u043F\\u0447\\u0430\"\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(Nickname, { ref: this.nickname, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit }),\n\t\t\t\tReact.createElement(Email, { ref: this.email, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, emailId: \"email-reg\" }),\n\t\t\t\tReact.createElement(Password, { ref: this.password, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, passId: \"pass-first\", checkPassIdentity: this.checkPassIdentity }),\n\t\t\t\tReact.createElement(Password2, { ref: this.password2, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, passId: \"pass-second\", passIdBind: \"pass-first\" }),\n\t\t\t\tReact.createElement(Captcha, { ref: this.captcha, showTips: this.showTips, manipulteSubmit: this.manipulteSubmit, base64Captcha: this.props.base64Captcha }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ className: \"text-center\" },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t{ type: \"submit\", className: \"btn\", disabled: this.state.disabled },\n\t\t\t\t\t\t\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Registration;\n}(React.Component);\n\nvar Email = function (_React$Component4) {\n\t_inherits(Email, _React$Component4);\n\n\tfunction Email(props) {\n\t\t_classCallCheck(this, Email);\n\n\t\tvar _this5 = _possibleConstructorReturn(this, (Email.__proto__ || Object.getPrototypeOf(Email)).call(this, props));\n\n\t\t_this5.state = { isPassed: true };\n\t\t_this5.handleInput = _this5.handleInput.bind(_this5);\n\t\t_this5.handleFocus = _this5.handleFocus.bind(_this5);\n\t\t_this5.showTip = _this5.showTip.bind(_this5);\n\t\treturn _this5;\n\t}\n\n\t_createClass(Email, [{\n\t\tkey: \"showTip\",\n\t\tvalue: function showTip() {\n\t\t\tthis.setState({ isPassed: false });\n\t\t}\n\t}, {\n\t\tkey: \"handleInput\",\n\t\tvalue: function handleInput(event) {\n\t\t\tvar _this6 = this;\n\n\t\t\tthis.props.showTips();\n\t\t\tif (event.target.value.match(/^[a-z0-9_.-]+@[a-z0-9-]+\\.[a-z]{2,}$/)) {\n\t\t\t\tthis.setState({ isPassed: true }, function () {\n\t\t\t\t\treturn _this6.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false }, function () {\n\t\t\t\t\treturn _this6.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"handleFocus\",\n\t\tvalue: function handleFocus(event) {\n\t\t\tevent.target.removeAttribute('readonly');\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"form-text text-danger\";\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"form-group\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"label\",\n\t\t\t\t\t{ htmlFor: this.props.emailId },\n\t\t\t\t\t\"Email\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\"input\", { onInput: this.handleInput, type: \"text\", id: this.props.emailId, className: \"form-control\", placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\", \"aria-describedby\": \"emailError-log\", name: \"email\", onFocus: this.handleFocus, readOnly: true, autoComplete: \"off\" }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"small\",\n\t\t\t\t\t{ className: this.state.isPassed ? classLink + \" d-none\" : classLink },\n\t\t\t\t\t\"Email \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u0432 \\u0442\\u0430\\u043A\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435: ivanov@domain.domain\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Email;\n}(React.Component);\n\nvar Nickname = function (_React$Component5) {\n\t_inherits(Nickname, _React$Component5);\n\n\tfunction Nickname(props) {\n\t\t_classCallCheck(this, Nickname);\n\n\t\tvar _this7 = _possibleConstructorReturn(this, (Nickname.__proto__ || Object.getPrototypeOf(Nickname)).call(this, props));\n\n\t\t_this7.state = { isPassed: true };\n\t\t_this7.handleInput = _this7.handleInput.bind(_this7);\n\t\t_this7.handleFocus = _this7.handleFocus.bind(_this7);\n\t\t_this7.showTip = _this7.showTip.bind(_this7);\n\t\treturn _this7;\n\t}\n\n\t_createClass(Nickname, [{\n\t\tkey: \"showTip\",\n\t\tvalue: function showTip() {\n\t\t\tthis.setState({ isPassed: false });\n\t\t}\n\t}, {\n\t\tkey: \"handleInput\",\n\t\tvalue: function handleInput(event) {\n\t\t\tvar _this8 = this;\n\n\t\t\tthis.props.showTips();\n\t\t\tif (event.target.value.match(/^.{2,}$/)) {\n\t\t\t\t//setState - асинхронная функция поэтому чтобы использовать результат ее выполнения нужно\n\t\t\t\t//запускать функцию после нее в аргументах\n\t\t\t\tthis.setState({ isPassed: true }, function () {\n\t\t\t\t\treturn _this8.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false }, function () {\n\t\t\t\t\treturn _this8.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"handleFocus\",\n\t\tvalue: function handleFocus(event) {\n\t\t\tevent.target.removeAttribute('readonly');\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"form-text text-danger\";\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"form-group\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"label\",\n\t\t\t\t\t{ htmlFor: \"nickname\" },\n\t\t\t\t\t\"\\u041D\\u0438\\u043A\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\"input\", { onInput: this.handleInput, type: \"text\", id: \"nickname\", className: \"form-control\", placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\", \"aria-describedby\": \"nicknameError-reg\", name: \"nickname\", onFocus: this.handleFocus, readOnly: true, autoComplete: \"off\" }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"small\",\n\t\t\t\t\t{ className: this.state.isPassed ? classLink + \" d-none\" : classLink },\n\t\t\t\t\t\"\\u041D\\u0438\\u043A \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C \\u0438\\u0437 \\u0434\\u0432\\u0443\\u0445 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Nickname;\n}(React.Component);\n\nvar Password = function (_React$Component6) {\n\t_inherits(Password, _React$Component6);\n\n\tfunction Password(props) {\n\t\t_classCallCheck(this, Password);\n\n\t\tvar _this9 = _possibleConstructorReturn(this, (Password.__proto__ || Object.getPrototypeOf(Password)).call(this, props));\n\n\t\t_this9.state = { isPassed: true, passVisible: false };\n\t\t_this9.handleInput = _this9.handleInput.bind(_this9);\n\t\t_this9.handleFocus = _this9.handleFocus.bind(_this9);\n\t\t_this9.handleClick = _this9.handleClick.bind(_this9);\n\t\t_this9.showTip = _this9.showTip.bind(_this9);\n\t\treturn _this9;\n\t}\n\n\t_createClass(Password, [{\n\t\tkey: \"showTip\",\n\t\tvalue: function showTip() {\n\t\t\tthis.setState({ isPassed: false });\n\t\t}\n\t}, {\n\t\tkey: \"handleInput\",\n\t\tvalue: function handleInput(event) {\n\t\t\tvar _this10 = this;\n\n\t\t\tthis.props.showTips();\n\t\t\tif (this.props.passId.includes(\"first\")) this.props.checkPassIdentity();\n\t\t\tif (event.target.value.match(/^(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{8,}$/)) {\n\t\t\t\tthis.setState({ isPassed: true }, function () {\n\t\t\t\t\treturn _this10.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false }, function () {\n\t\t\t\t\treturn _this10.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"handleFocus\",\n\t\tvalue: function handleFocus(event) {\n\t\t\tevent.target.removeAttribute('readonly');\n\t\t}\n\t}, {\n\t\tkey: \"handleClick\",\n\t\tvalue: function handleClick(event) {\n\t\t\tif (event.target.className.includes(\"open\")) {\n\t\t\t\tthis.setState({ passVisible: false });\n\t\t\t\tevent.target.parentNode.getElementsByClassName(\"password\")[0].type = \"password\";\n\t\t\t} else {\n\t\t\t\tthis.setState({ passVisible: true });\n\t\t\t\tevent.target.parentNode.getElementsByClassName(\"password\")[0].type = \"text\";\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"form-text text-danger\";\n\t\t\tvar visible = void 0;\n\t\t\tif (this.state.passVisible) {\n\t\t\t\tvisible = [null, \"d-none\"];\n\t\t\t} else {\n\t\t\t\tvisible = [\"d-none\", null];\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: this.props.passId.includes(\"log\") ? \"form-group pb-4\" : \"form-group\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"label\",\n\t\t\t\t\t{ htmlFor: this.props.passId },\n\t\t\t\t\t\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ style: { display: \"flex\" } },\n\t\t\t\t\tReact.createElement(\"input\", { id: this.props.passId, onInput: this.handleInput, type: \"password\", className: \"form-control password\", placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", \"aria-describedby\": \"passwordError-log\", name: \"password\", onFocus: this.handleFocus, readOnly: true, autoComplete: \"off\" }),\n\t\t\t\t\tReact.createElement(\"img\", { onClick: this.handleClick, className: \"open \" + visible[0], src: \"/img/eye.svg\" }),\n\t\t\t\t\tReact.createElement(\"img\", { onClick: this.handleClick, src: \"/img/eye-close.svg\", className: \"close \" + visible[1] })\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"small\",\n\t\t\t\t\t{ className: this.state.isPassed ? classLink + \" d-none\" : classLink },\n\t\t\t\t\t\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0438\\u0437 \\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432, \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043B\\u0430\\u0442\\u0438\\u043D\\u0441\\u043A\\u0438\\u0435 \\u0431\\u043E\\u043B\\u044C\\u0448\\u0438\\u0435 \\u0438 \\u043C\\u0430\\u043B\\u0435\\u043D\\u044C\\u043A\\u0438\\u0435 \\u0431\\u0443\\u043A\\u0432\\u044B, \\u0446\\u0438\\u0444\\u0440\\u044B \\u0438 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u044B: !, @, #, $, %, ^, &, *\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Password;\n}(React.Component);\n\nvar Password2 = function (_Password) {\n\t_inherits(Password2, _Password);\n\n\tfunction Password2(props) {\n\t\t_classCallCheck(this, Password2);\n\n\t\tvar _this11 = _possibleConstructorReturn(this, (Password2.__proto__ || Object.getPrototypeOf(Password2)).call(this, props));\n\n\t\t_this11.checkPassIdentity = _this11.checkPassIdentity.bind(_this11);\n\t\treturn _this11;\n\t}\n\n\t_createClass(Password2, [{\n\t\tkey: \"handleInput\",\n\t\tvalue: function handleInput(event) {\n\t\t\tvar _this12 = this;\n\n\t\t\tthis.props.showTips();\n\t\t\tif (event.target.value === document.getElementById(this.props.passIdBind).value) {\n\t\t\t\tthis.setState({ isPassed: true }, function () {\n\t\t\t\t\treturn _this12.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false }, function () {\n\t\t\t\t\treturn _this12.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"checkPassIdentity\",\n\t\tvalue: function checkPassIdentity() {\n\t\t\tif (document.getElementById(this.props.passId).value === document.getElementById(this.props.passIdBind).value) {\n\t\t\t\tthis.setState({ isPassed: true });\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false });\n\t\t\t}\n\t\t\t//this.props.manipulteSubmit();\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"form-text text-danger\";\n\t\t\tvar visible = void 0;\n\t\t\tif (this.state.passVisible) {\n\t\t\t\tvisible = [null, \"d-none\"];\n\t\t\t} else {\n\t\t\t\tvisible = [\"d-none\", null];\n\t\t\t}\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ className: \"form-group pb-4\" },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"label\",\n\t\t\t\t\t{ htmlFor: this.props.passId },\n\t\t\t\t\t\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"div\",\n\t\t\t\t\t{ style: { display: \"flex\" } },\n\t\t\t\t\tReact.createElement(\"input\", { id: this.props.passId, onInput: this.handleInput, type: \"password\", className: \"form-control password\", placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", \"aria-describedby\": \"passwordError-log\", name: \"password\", onFocus: this.handleFocus, readOnly: true, autoComplete: \"off\" }),\n\t\t\t\t\tReact.createElement(\"img\", { onClick: this.handleClick, className: \"open \" + visible[0], src: \"/img/eye.svg\" }),\n\t\t\t\t\tReact.createElement(\"img\", { onClick: this.handleClick, src: \"/img/eye-close.svg\", className: \"close \" + visible[1] })\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"small\",\n\t\t\t\t\t{ className: this.state.isPassed ? classLink + \" d-none\" : classLink },\n\t\t\t\t\t\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0438 \\u0434\\u043E\\u043B\\u0436\\u043D\\u044B \\u0441\\u043E\\u0432\\u043F\\u0430\\u0434\\u0430\\u0442\\u044C!\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Password2;\n}(Password);\n\nvar Captcha = function (_React$Component7) {\n\t_inherits(Captcha, _React$Component7);\n\n\tfunction Captcha(props) {\n\t\t_classCallCheck(this, Captcha);\n\n\t\tvar _this13 = _possibleConstructorReturn(this, (Captcha.__proto__ || Object.getPrototypeOf(Captcha)).call(this, props));\n\n\t\t_this13.state = { isPassed: true };\n\t\t_this13.handleInput = _this13.handleInput.bind(_this13);\n\t\t_this13.handleFocus = _this13.handleFocus.bind(_this13);\n\t\t_this13.showTip = _this13.showTip.bind(_this13);\n\t\treturn _this13;\n\t}\n\n\t_createClass(Captcha, [{\n\t\tkey: \"showTip\",\n\t\tvalue: function showTip() {\n\t\t\tthis.setState({ isPassed: false });\n\t\t}\n\t}, {\n\t\tkey: \"handleFocus\",\n\t\tvalue: function handleFocus(event) {\n\t\t\tevent.target.removeAttribute('readonly');\n\t\t}\n\t}, {\n\t\tkey: \"handleInput\",\n\t\tvalue: function handleInput(event) {\n\t\t\tvar _this14 = this;\n\n\t\t\tthis.props.showTips();\n\t\t\tif (event.target.value.match(/^[a-zA-Z0-9]{6}$/)) {\n\t\t\t\tthis.setState({ isPassed: true }, function () {\n\t\t\t\t\treturn _this14.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isPassed: false }, function () {\n\t\t\t\t\treturn _this14.props.manipulteSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar classLink = \"form-text text-danger\";\n\t\t\treturn React.createElement(\n\t\t\t\t\"div\",\n\t\t\t\tnull,\n\t\t\t\tReact.createElement(\"img\", { id: \"captcha-img\", src: this.props.base64Captcha }),\n\t\t\t\tReact.createElement(\"input\", { onInput: this.handleInput, id: \"captcha\", className: \"form-control\", placeholder: \"\\u041A\\u0430\\u043F\\u0447\\u0430\", name: \"captcha\", onFocus: this.handleFocus }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"small\",\n\t\t\t\t\t{ className: this.state.isPassed ? classLink + \" d-none\" : classLink },\n\t\t\t\t\t\"\\u041A\\u0430\\u043F\\u0447\\u0430 \\u0434\\u043E\\u043B\\u0436\\u043D\\u0430 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0438\\u0437 6 \\u0431\\u0443\\u043A\\u0432 \\u0438 \\u0446\\u0438\\u0444\\u0440\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn Captcha;\n}(React.Component);\n\nReactDOM.render(React.createElement(FormBar, null), document.getElementById('logreg-form'));\n\n/*<div class=\"text-center\">\r\n        <input type=\"checkbox\" class=\"btn-check\" id=\"btn-check-login\">\r\n                <label class=\"btn shadow-none checked\" for=\"btn-check-login\">Войти</label>\r\n                |\r\n                <input type=\"checkbox\" class=\"btn-check\" id=\"btn-check-registration\">\r\n                <label class=\"btn shadow-none\" for=\"btn-check-registration\">Зарегистрироваться</label>\r\n    </div>\r\n  <form class=\"log pb-4\" action=\"ok\" method=\"post\" autocomplete=\"off\">\r\n              <div class=\"form-group\">\r\n                <label for=\"email-log\">Email</label>\r\n                <input type=\"text\" id=\"email-log\" class=\"form-control\" placeholder=\"Введите email\" aria-describedby=\"emailError-log\" name=\"email\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\">\r\n                <small id=\"emailError-log\" class=\"form-text text-danger d-none\">Email должен быть в таком формате: ivanov@domain.domain</small>\r\n              </div>\r\n              <div class=\"form-group pb-4\">\r\n                <label for=\"password-log\">Пароль</label>\r\n                <div style=\"display:flex\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"password-log\" placeholder=\"Пароль\" aria-describedby=\"passwordError-log\" name=\"password\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\"><img id=\"pass-log-open\" class=\"d-none\" src=\"/img/eye.svg\"><img id=\"pass-log-close\" src=\"/img/eye-close.svg\">\r\n                </div>\r\n                <small id=\"passwordError-log\" class=\"form-text text-danger d-none\">Пароль должен состоять из минимум 8 символов, может содержать латинские большие и маленькие буквы, цифры и специальные символы: %, *, (, ),?, @, #, $, ~\"</small>\r\n              </div>\r\n              <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn\" id=\"submit-log\">Подтвердить</button>\r\n                </div>\r\n            </form>\r\n            <form class=\"d-none reg pb-4\" action=\"ok\" method=\"post\">\r\n              <div class=\"form-group\">\r\n                <label for=\"nickname\">Ник</label>\r\n                <input type=\"text\" id=\"nickname\" class=\"form-control\" placeholder=\"Введите ник\" aria-described-by=\"nicknameError-reg\" name=\"nickname\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\">\r\n                <small id=\"nicknameError-reg\" class=\"form-text text-danger d-none\">Ник должен состоять минимум из двух символов</small>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"email-reg\">Email</label>\r\n                <input type=\"text\" id=\"email-reg\" class=\"form-control\" placeholder=\"Введите email\" aria-described-by=\"emailError-reg\" name=\"email\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\">\r\n                <small id=\"emailError-reg\" class=\"form-text text-danger d-none\">Email должен быть в таком формате: ivanov@domain.domain</small>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password-reg\">Пароль</label>\r\n                <div style=\"display:flex\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"password-reg\" placeholder=\"Пароль\" aria-described-by=\"passwordError-reg\" name=\"password\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\"><img id=\"pass-reg-open\" class=\"d-none\" src=\"/img/eye.svg\"><img id=\"pass-reg-close\" src=\"/img/eye-close.svg\">\r\n                </div>\r\n                <small id=\"passwordError-reg\" class=\"form-text text-danger d-none\">Пароль должен состоять из минимум 8 символов, может содержать латинские большие и маленькие буквы, цифры и специальные символы: %, *, (, ),?, @, #, $, ~</small>\r\n              </div>\r\n              <div class=\"form-group pb-4\">\r\n                <label for=\"password-second\">Подтвердить пароль</label>\r\n                <div style=\"display:flex\">\r\n                    <input type=\"password\" class=\"form-control\" id=\"password-second\" placeholder=\"Подтверждение пароля\" aria-described-by=\"passwordSecondError-reg\" onfocus=\"this.removeAttribute('readonly');\" readonly autocomplete=\"off\"><img id=\"pass-reg-sec-open\" class=\"d-none\" src=\"/img/eye.svg\"><img id=\"pass-reg-sec-close\" src=\"/img/eye-close.svg\">\r\n                </div>\r\n                <small id=\"passwordSecondError-reg\" class=\"form-text text-danger d-none\">Пароли должны совпадать!</small>\r\n              </div>\r\n              <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn\" id=\"submit-reg\">Подтвердить</button>\r\n                </div>\r\n            </form>*/\n\n//# sourceURL=webpack://fartza.ru/./public/js-react/logreg.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/js-react/logreg.js"]();
/******/ 	
/******/ })()
;