{"version":3,"file":"react_nav_nav_bar_js.bundle.js","mappings":"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","sources":["webpack://fartza.ru/./react/nav/links.js","webpack://fartza.ru/./react/nav/nav.js","webpack://fartza.ru/./react/nav/nav_bar.js"],"sourcesContent":["export let links = [\r\n    \"Новые\",\r\n    \"Подписки\",\r\n    \"Популярные\"\r\n];","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setLastArgs } from \"../../store/reducers/goods_slice\";\r\nimport { goodsAPI } from \"../../store/services/goods_service\";\r\n\r\nimport { links } from \"./links\";\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //this.state = { lastArgs: null };\r\n\r\n        // Эта привязка обязательна для работы `this` в колбэке.\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        let num;\r\n        for (let i = 0; i < links.length; i++) {\r\n            if (this.props.name == links[i]) {\r\n                num = i;\r\n            }\r\n        }\r\n        this.props.func(num);\r\n        //let [searchParams, setSearchParams] = useSearchParams();\r\n        const searchParams = new URLSearchParams(location.search);\r\n        let lastArgs = { word: ((searchParams.get('query') && searchParams.get('query').length > 1) ?\r\n\t\t\tsearchParams.get('query') : \"\"), since: 0};\r\n        if (this.props.name == \"Популярные\") {\r\n            /*const url = new URL(window.location);\r\n            url.searchParams.set('sort', 'popular');\r\n            window.history.pushState({}, '', url);\r\n            window.location.reload();*/\r\n            searchParams.set('sort', 'popular');\r\n            window.history.replaceState({}, '', `${location.pathname}?${searchParams}`);\r\n            /*this.props.sendAPIRequest({ command: 'searchGoods', word: (searchParams.get('query') && searchParams.get('query').length > 1) ? searchParams.get('query') : \"\", since: 0, sort: 'popular' }, '/api', 'POST').then(resolve => {\r\n                if (resolve.body.goods[0].length == 0) {\r\n                this.props.updateGoods('Ничего не найдено!');\r\n                return;\r\n                }\r\n                this.props.updateGoods(resolve.body.goods[0]);\r\n            }).catch(reject => {\r\n                this.props.updateGoods(reject.error);\r\n            });*/\r\n            this.props.fetchAllGoods({ ...lastArgs, sort: 'popular' });\r\n\t\t\tthis.props.setLastArgs({ ...lastArgs, sort: 'popular' });\r\n        }\r\n        else if (this.props.name == \"Новые\") {\r\n            /*const url = new URL(window.location);\r\n            url.searchParams.set('sort', 'new');\r\n            window.history.pushState({}, '', url);\r\n            window.location.reload();*/\r\n            searchParams.set('sort', 'new');\r\n            window.history.replaceState({}, '', `${location.pathname}?${searchParams}`);\r\n            /*this.props.sendAPIRequest({ command: 'searchGoods', word: (searchParams.get('query') && searchParams.get('query').length > 1) ? searchParams.get('query') : \"\", since: 0, sort: 'new' }, '/api', 'POST').then(resolve => {\r\n                if (resolve.body.goods[0].length == 0) {\r\n                this.props.updateGoods('Ничего не найдено!');\r\n                return;\r\n                }\r\n                this.props.updateGoods(resolve.body.goods[0]);\r\n            }).catch(reject => {\r\n                this.props.updateGoods(reject.error);\r\n            });*/\r\n            this.props.fetchAllGoods({ ...lastArgs, sort: 'new' });\r\n\t\t\tthis.props.setLastArgs({ ...lastArgs, sort: 'new' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let ariaCurrent = this.props.isActive ? \"page\" : null;\r\n        let className = 'nav-link';\r\n        if (this.props.isActive) {\r\n            className += ' active';\r\n        }\r\n        return (\r\n            <li className=\"nav-item d-block d-sm-block d-md-inline-block\"><a href=\"#\" className={className} aria-current={ariaCurrent} onClick={this.handleClick}>{this.props.name}</a></li>\r\n        );\r\n    }\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n\t\tfetchAllGoodsState: (args) => goodsAPI.endpoints.fetchAllGoods.select(args)(state),\r\n\t\tlastArgs: state.goodsReducer.lastArgs\r\n    };\r\n}*/\r\n\r\nconst mapDispatchToProps = {\r\n    fetchAllGoods: goodsAPI.endpoints.fetchAllGoods.initiate,//(args) => dispatch(goodsAPI.endpoints.fetchAllGoods.initiate(args)) //(args) => dispatch(getGoodsFromAPI(args))\r\n\tsetLastArgs: setLastArgs\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Nav);","import React from \"react\";\r\n\r\nimport Nav from './nav';\r\nimport { links } from \"./links\";\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.output = this.output.bind(this);\r\n    let active = [true];\r\n    for (let i = 1; i < links.length; i++) {\r\n      active.push(false);\r\n    }\r\n    this.state = {isActive: active};\r\n    /*let params = new URLSearchParams(new URL(window.location.href).search);\r\n    let sort;\r\n    for(let pair of params.entries()) {\r\n      if (pair[0] == 'sort') {\r\n          sort = pair[1];\r\n      }\r\n    }*/\r\n    /*if (!sort || sort == 'new') {\r\n        var active = [true];\r\n        for (var i = 1; i < links.length; i++) {\r\n          active.push(false);\r\n        }\r\n    }\r\n    else if (sort == 'popular') {\r\n        var active = [];\r\n        for (var i = 0; i < links.length; i++) {\r\n          active.push(false);\r\n        }\r\n        active[2] = true;\r\n    }\r\n    this.state = {isActive: active};*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    //let [searchParams, setSearchParams] = useSearchParams();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    let sort = searchParams.get('sort');\r\n    if (sort == 'popular') {\r\n        let active = [];\r\n        for (let i = 0; i < links.length; i++) {\r\n          active.push(false);\r\n        }\r\n        active[2] = true;\r\n        this.setState({isActive: active});\r\n    }\r\n  }\r\n\r\n  output = num => {\r\n    let active = [];\r\n    for (let i = 0; i < links.length; i++) {\r\n      active.push(false);\r\n    }\r\n    active[num] = true;\r\n    this.setState({ isActive : active});\r\n  }\r\n\r\n  render() {\r\n    let rows = [];\r\n    for (let i = 0; i < links.length; i++) {\r\n      rows.push(<Nav isActive={this.state.isActive[i]} name={links[i]} func={this.output} updateGoods={this.props.updateGoods} getGoodsFromAPI={this.props.getGoodsFromAPI} />);\r\n    }\r\n    let tiles;\r\n    if (!this.props.disableTiles) {\r\n      tiles = (<div>\r\n                <div className=\"d-md-none\" style={{width: '100vw'}}></div>\r\n                  <nav>\r\n                    <ul className=\"nav nav-pills d-block d-sm-block d-md-flex\" id=\"nav\">\r\n\r\n                      <span>\r\n                        {rows}\r\n                        <LogReg/>\r\n                      </span>\r\n\r\n                    </ul>\r\n                  </nav>\r\n                </div>);\r\n    }\r\n    return (\r\n      <header className=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom px-5\">\r\n          <a href=\"/\" className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-dark text-decoration-none\">\r\n              <span className=\"fs-4\">FARTZA</span>\r\n          </a>\r\n\r\n          {tiles}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nclass LogReg extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {logout: false, confirm: null, nick: null};\r\n  }\r\n  componentDidMount() {\r\n      /*fetch('/api', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ command: 'isLoggedIn' })\r\n        }).then(response => {\r\n            response.json().then(body => {\r\n                this.setState({logout: body.logout, confirm: body.confirm, nick: body.nick});\r\n            });\r\n        });*/\r\n  }\r\n  render() {\r\n      console.log(this.state);\r\n      if (!this.state.logout) {\r\n        return (\r\n        <li className=\"nav-item d-block d-sm-block d-md-inline-block px-3\"><a href=\"#\" className=\"nav-link\" id=\"logreg\">Вход/Регистрация</a></li>\r\n      );\r\n      }\r\n    else {\r\n      return (\r\n          <div className=\"dropdown d-block d-sm-block d-md-inline-block px-3\">\r\n          <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            {this.state.nick} {this.state.confirm ? \"(осуществлен вход)\" : \"(требуется подтверждение почты)\"}\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            {this.state.confirm ? <li><a className=\"dropdown-item\" href=\"/goods/create\">Продать</a></li> : ''}\r\n            {this.state.confirm ? <li><a className=\"dropdown-item\" href=\"#\">Создано</a></li> : ''}\r\n            <li><a className=\"dropdown-item\" href=\"#\">Настройки</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/logout\">Выйти</a></li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}"],"names":["links","React","connect","setLastArgs","goodsAPI","Nav","props","handleClick","bind","num","i","length","name","func","searchParams","URLSearchParams","location","search","lastArgs","word","get","since","set","window","history","replaceState","pathname","fetchAllGoods","sort","ariaCurrent","isActive","className","Component","mapDispatchToProps","endpoints","initiate","NavBar","active","push","setState","output","state","rows","updateGoods","getGoodsFromAPI","tiles","disableTiles","width","LogReg","logout","confirm","nick","console","log"],"sourceRoot":""}